apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "counter.fullname" . }}-flask
  labels:
    {{- include "counter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "counter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "counter.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "5000"
        prometheus.io/scrape: "true"  
    spec:
      containers:
        - name: flask
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          ports:
          - containerPort: 5000
          env:
          - name: REDIS_HOST
            value: {{ .Release.Name }}-redis-master
          - name: REDIS_PORT
            value: "6379"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-redis
                key: redis-password    
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 5000
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 5000
          resources:
            requests:
              cpu:  {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}       
              memory: {{ .Values.resources.limits.memory }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                  - flask
            topologyKey: "kubernetes.io/hostname"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: master
                  app.kubernetes.io/instance: redis
                  app.kubernetes.io/name: redis
              topologyKey: "kubernetes.io/hostname"
      
      
